START
=> PROG
=> REPTPROG0
=> STRUCTORIMPLORFUNC REPTPROG0
=> STRUCTDECL REPTPROG0
=> struct id OPTSTRUCTDECL2 lcurbr REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 OPTSTRUCTDECL2 lcurbr REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 lcurbr REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } semi REPTPROG0
=> struct POLYNOMIAL0 { } ; REPTPROG0
=> struct POLYNOMIAL0 { } ; STRUCTORIMPLORFUNC REPTPROG0
=> struct POLYNOMIAL0 { } ; STRUCTDECL REPTPROG0
=> struct POLYNOMIAL0 { } ; struct id OPTSTRUCTDECL2 lcurbr REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 OPTSTRUCTDECL2 lcurbr REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 lcurbr REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { VISIBILITY MEMBERDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private MEMBERDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private VARDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let id colon TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a colon TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; VISIBILITY MEMBERDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private MEMBERDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private VARDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let id colon TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b colon TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; STRUCTORIMPLORFUNC REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; STRUCTDECL REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct id OPTSTRUCTDECL2 lcurbr REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR OPTSTRUCTDECL2 lcurbr REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits id REPTOPTSTRUCTDECL22 lcurbr REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL REPTOPTSTRUCTDECL22 lcurbr REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL lcurbr REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { VISIBILITY MEMBERDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private MEMBERDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private VARDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let id colon TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a colon TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; VISIBILITY MEMBERDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private MEMBERDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private VARDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let id colon TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b colon TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : TYPE REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float REPTVARDECL4 semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; VISIBILITY MEMBERDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public MEMBERDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public FUNCDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public FUNCHEAD semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func id lpar FPARAMS rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build lpar FPARAMS rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( FPARAMS rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( id colon TYPE REPTFPARAMS3 REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A colon TYPE REPTFPARAMS3 REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : TYPE REPTFPARAMS3 REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float REPTFPARAMS3 REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float FPARAMSTAIL REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float comma id colon TYPE REPTFPARAMSTAIL4 REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , id colon TYPE REPTFPARAMSTAIL4 REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B colon TYPE REPTFPARAMSTAIL4 REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : TYPE REPTFPARAMSTAIL4 REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float REPTFPARAMSTAIL4 REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> TYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> id semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; VISIBILITY MEMBERDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public MEMBERDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public FUNCDECL REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public FUNCHEAD semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func id lpar FPARAMS rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate lpar FPARAMS rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( FPARAMS rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( id colon TYPE REPTFPARAMS3 REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x colon TYPE REPTFPARAMS3 REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x : TYPE REPTFPARAMS3 REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x : float REPTFPARAMS3 REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x : float REPTFPARAMS4 rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x : float rpar arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x : float ) arrow RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x : float ) -> RETURNTYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x : float ) -> TYPE semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x : float ) -> float semi REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x : float ) -> float ; REPTSTRUCTDECL4 rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x : float ) -> float ; rcurbr semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x : float ) -> float ; } semi REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x : float ) -> float ; } ; REPTPROG0
=> struct POLYNOMIAL0 { } ; struct POLYNOMIAL1 { private let a : float ; private let b : float ; } ; struct LINEAR inherits POLYNOMIAL { private let a : float ; private let b : float ; public func build ( A : float , B : float ) -> LINEAR ; public func evaluate ( x : float ) -> float ; } ; 
