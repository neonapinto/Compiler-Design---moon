[inlinecmt, // function formal parameters - array with size and n-dimensions, 1] 
[func, func, 2][id, printNumbers, 2] [openpar, (, 2] [id, arr, 2] [colon, :, 2] [integer, integer, 2] [opensqbr, [, 2] [intnum, 10, 2] [closesqbr, ], 2] [comma, ,, 2] [id, ndim, 2] [colon, :, 2] [integer, integer, 2] [opensqbr, [, 2] [intnum, 10, 2] [closesqbr, ], 2] [opensqbr, [, 2] [intnum, 20, 2] [closesqbr, ], 2] [comma, ,, 2] [id, lin, 2] [colon, :, 2] [id, LINEAR, 2] [closepar, ), 2] [arrow, ->, 2] [void, void, 2] 
[opencubr, {, 3]
[id, x, 4][assign, =, 4] [id, a, 4] [openpar, (, 4] [id, b, 4] [closepar, ), 4] [dot, ., 4] [id, c, 4] [semi, ;, 4] [inlinecmt, //  id(id).id, 4] 
[id, a, 5][openpar, (, 5] [id, b, 5] [closepar, ), 5] [dot, ., 5] [id, c, 5] [openpar, (, 5] [closepar, ), 5] [semi, ;, 5] [inlinecmt, //  id(id).id(), 5] 
[id, a, 6][dot, ., 6] [id, b, 6] [opensqbr, [, 6] [id, c, 6] [closesqbr, ], 6] [assign, =, 6] [intnum, 0, 6] [semi, ;, 6] [inlinecmt, //  id.id[id], 6] 
[id, a, 7][opensqbr, [, 7] [id, b, 7] [closesqbr, ], 7] [dot, ., 7] [id, c, 7] [assign, =, 7] [intnum, 0, 7] [semi, ;, 7] [inlinecmt, //  id[id].id, 7] 
[id, a, 8][opensqbr, [, 8] [id, b, 8] [closesqbr, ], 8] [dot, ., 8] [id, c, 8] [opensqbr, [, 8] [id, d, 8] [closesqbr, ], 8] [assign, =, 8] [intnum, 0, 8] [semi, ;, 8] [inlinecmt, //  id[id].id[id], 8] 
[id, a, 9][dot, ., 9] [id, b, 9] [opensqbr, [, 9] [id, c, 9] [closesqbr, ], 9] [opensqbr, [, 9] [id, d, 9] [closesqbr, ], 9] [assign, =, 9] [intnum, 0, 9] [semi, ;, 9] [inlinecmt, //  d.id[id][id], 9] 
[id, a, 10][opensqbr, [, 10] [id, b, 10] [closesqbr, ], 10] [opensqbr, [, 10] [id, c, 10] [closesqbr, ], 10] [dot, ., 10] [id, d, 10] [assign, =, 10] [intnum, 0, 10] [semi, ;, 10] [inlinecmt, //  id[id][id].id, 10] 
[id, a, 11][opensqbr, [, 11] [id, b, 11] [closesqbr, ], 11] [opensqbr, [, 11] [id, c, 11] [closesqbr, ], 11] [dot, ., 11] [id, d, 11] [opensqbr, [, 11] [id, e, 11] [closesqbr, ], 11] [opensqbr, [, 11] [id, f, 11] [closesqbr, ], 11] [assign, =, 11] [intnum, 0, 11] [semi, ;, 11] [inlinecmt, //  id[id][id].id[id][id], 11] 
[id, x, 12][assign, =, 12] [id, a, 12] [openpar, (, 12] [id, b, 12] [closepar, ), 12] [dot, ., 12] [id, c, 12] [opensqbr, [, 12] [id, d, 12] [closesqbr, ], 12] [semi, ;, 12] [inlinecmt, //  id(id).id[id], 12] 
[id, x, 13][assign, =, 13] [id, a, 13] [openpar, (, 13] [id, b, 13] [closepar, ), 13] [dot, ., 13] [id, c, 13] [opensqbr, [, 13] [id, d, 13] [closesqbr, ], 13] [opensqbr, [, 13] [id, e, 13] [closesqbr, ], 13] [semi, ;, 13] [inlinecmt, //  id(id).id[id][id], 13] 
[id, a, 14][opensqbr, [, 14] [id, m, 14] [plus, +, 14] [id, n, 14] [closesqbr, ], 14] [assign, =, 14] [intnum, 0, 14] [semi, ;, 14] 
[return, return, 15][openpar, (, 15] [openpar, (, 15] [id, a, 15] [closepar, ), 15] [plus, +, 15] [openpar, (, 15] [id, b, 15] [closepar, ), 15] [minus, -, 15] [openpar, (, 15] [minus, -, 15] [id, c, 15] [closepar, ), 15] [mult, *, 15] [openpar, (, 15] [not, !, 15] [id, d, 15] [closepar, ), 15] [eq, ==, 15] [intnum, 0, 15] [closepar, ), 15] [semi, ;, 15] [inlinecmt, // involving all the above in one expression, 15] 
[id, a, 16][assign, =, 16] [intnum, 2, 16] [plus, +, 16] [openpar, (, 16] [intnum, 3, 16] [mult, *, 16] [openpar, (, 16] [intnum, 3, 16] [plus, +, 16] [intnum, 5, 16] [closepar, ), 16] [closepar, ), 16] [semi, ;, 16] [inlinecmt, //nested parenthesis, 16] 
[while, while, 17][openpar, (, 17] [intnum, 3, 17] [noteq, <>, 17] [intnum, 4, 17] [closepar, ), 17] [opencubr, {, 17] [inlinecmt, // empty while block, 17] 
[closecubr, }, 18][semi, ;, 18] 
[closecubr, }, 19]
[func, func, 21][id, noLocalVariableDeclBlock, 21] [openpar, (, 21] [closepar, ), 21] [arrow, ->, 21] [void, void, 21] [inlinecmt, //no local variable block, 21] 
[opencubr, {, 22]
[inlinecmt, //function body no statment, 23]
[closecubr, }, 24]
