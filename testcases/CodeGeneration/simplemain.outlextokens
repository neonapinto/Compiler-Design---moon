[inlinecmt, // Assignment 5 coverage:, 1] 
[inlinecmt, //      -------------, 2]
[inlinecmt, //      | YES | NO  |, 3]
[inlinecmt, //      -------------, 4]
[inlinecmt, // 1.1: |  X  |     |, 5]
[inlinecmt, // 1.2: |     |  X  |, 6]
[inlinecmt, // 1.3: |     |  X  |, 7]
[inlinecmt, // 1.4: |     |  X  |, 8]
[inlinecmt, // 2.1: |     |  X  |, 9]
[inlinecmt, // 2.2: |     |  X  |, 10]
[inlinecmt, // 2.3: |     |  X  |, 11]
[inlinecmt, // 2.4: |     |  X  |, 12]
[inlinecmt, // 3.1: |  X  |     |, 13]
[inlinecmt, // 3.2: |  X  |     |, 14]
[inlinecmt, // 3.3: |  X  |     |, 15]
[inlinecmt, // 3.4: |  X  |     |, 16]
[inlinecmt, // 4.1: |  X  |     |, 17]
[inlinecmt, // 4.2: |     |  X  |, 18]
[inlinecmt, // 4.3: |     |  X  |, 19]
[inlinecmt, // 4.4: |     |  X  |, 20]
[inlinecmt, // 5.1: |  X  |     |, 21]
[inlinecmt, // 5.2: |  X   |     |, 22]
[inlinecmt, // 5.3: |     |  X  |, 23]
[inlinecmt, //      -------------, 24]
[func, func, 26][id, main, 26] [openpar, (, 26] [closepar, ), 26] [arrow, ->, 26] [void, void, 26] 
[opencubr, {, 27]
[let, let, 28][id, x, 28] [colon, :, 28] [integer, integer, 28] [semi, ;, 28] [inlinecmt, // 1.1, 28] 
[let, let, 29][id, y, 29] [colon, :, 29] [integer, integer, 29] [semi, ;, 29] [inlinecmt, // 1.1, 29] 
[let, let, 30][id, z, 30] [colon, :, 30] [integer, integer, 30] [semi, ;, 30] [inlinecmt, // 1.1, 30] 
[id, y, 31][assign, =, 31] [intnum, 1, 31] [plus, +, 31] [intnum, 2, 31] [mult, *, 31] [intnum, 3, 31] [semi, ;, 31] [inlinecmt, // 3.1, 5.1, 31] 
[read, read, 32][openpar, (, 32] [id, x, 32] [closepar, ), 32] [semi, ;, 32] [inlinecmt, // 3.4, 32] 
[if, if, 33][openpar, (, 33] [id, x, 33] [gt, >, 33] [id, y, 33] [plus, +, 33] [intnum, 10, 33] [closepar, ), 33] [inlinecmt, // 3.2, 5.1, 33] 
[then, then, 34]
[write, write, 35][openpar, (, 35] [id, x, 35] [plus, +, 35] [intnum, 10, 35] [closepar, ), 35] [semi, ;, 35] [inlinecmt, // 3.4, 5.1, 35] 
[else, else, 36]
[write, write, 37][openpar, (, 37] [id, x, 37] [plus, +, 37] [intnum, 1, 37] [closepar, ), 37] [semi, ;, 37] [inlinecmt, // 3.4, 5.1, 37] 
[semi, ;, 38]
[id, z, 39][assign, =, 39] [intnum, 0, 39] [semi, ;, 39] [inlinecmt, // 3.1, 39] 
[while, while, 40][openpar, (, 40] [id, z, 40] [leq, <=, 40] [intnum, 10, 40] [closepar, ), 40] [opencubr, {, 40] [inlinecmt, // 3.3, 5.1, 40] 
[write, write, 41][openpar, (, 41] [id, z, 41] [closepar, ), 41] [semi, ;, 41] [inlinecmt, // 3.4, 41] 
[id, z, 42][assign, =, 42] [id, z, 42] [plus, +, 42] [intnum, 1, 42] [semi, ;, 42] [inlinecmt, // 3.1, 42] 
[closecubr, }, 43][semi, ;, 43] 
[let, let, 45][id, arr, 45] [colon, :, 45] [integer, integer, 45] [opensqbr, [, 45] [intnum, 4, 45] [closesqbr, ], 45] [semi, ;, 45] 
[let, let, 46][id, i, 46] [colon, :, 46] [integer, integer, 46] [semi, ;, 46] 
[id, i, 47][assign, =, 47] [intnum, 0, 47] [semi, ;, 47] 
[id, arr, 48][opensqbr, [, 48] [id, i, 48] [plus, +, 48] [intnum, 1, 48] [closesqbr, ], 48] [assign, =, 48] [intnum, 3, 48] [semi, ;, 48] [inlinecmt, // 5.2, 48] 
[id, arr, 49][opensqbr, [, 49] [id, i, 49] [plus, +, 49] [intnum, 2, 49] [closesqbr, ], 49] [assign, =, 49] [intnum, 4, 49] [semi, ;, 49] [inlinecmt, //4.1, 49] 
[id, arr, 50][opensqbr, [, 50] [id, i, 50] [plus, +, 50] [intnum, 3, 50] [closesqbr, ], 50] [assign, =, 50] [intnum, 5, 50] [semi, ;, 50] 
[while, while, 51][openpar, (, 51] [id, i, 51] [lt, <, 51] [intnum, 4, 51] [closepar, ), 51] [opencubr, {, 51] [inlinecmt, // 3.3, 5.1, 51] 
[write, write, 52][openpar, (, 52] [id, arr, 52] [opensqbr, [, 52] [id, i, 52] [closesqbr, ], 52] [closepar, ), 52] [semi, ;, 52] [inlinecmt, // 3.4, 52] 
[id, i, 53][assign, =, 53] [id, i, 53] [plus, +, 53] [intnum, 1, 53] [semi, ;, 53] [inlinecmt, // 3.1, 53] 
[closecubr, }, 54][semi, ;, 54] 
[closecubr, }, 55]
