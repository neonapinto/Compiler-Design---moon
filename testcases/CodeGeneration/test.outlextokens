[inlinecmt, // Assignment 5 coverage:, 1] 
[inlinecmt, //      -------------, 2]
[inlinecmt, //      | YES | NO  |, 3]
[inlinecmt, //      -------------, 4]
[inlinecmt, // 1.1: |  X  |     |, 5]
[inlinecmt, // 1.2: |     |  X  |, 6]
[inlinecmt, // 1.3: |     |  X  |, 7]
[inlinecmt, // 1.4: |     |  X  |, 8]
[inlinecmt, // 2.1: |  X  |     |, 9]
[inlinecmt, // 2.2: |  X  |     |, 10]
[inlinecmt, // 2.3: |     |  X  |, 11]
[inlinecmt, // 2.4: |     |  X  |, 12]
[inlinecmt, // 3.1: |  X  |     |, 13]
[inlinecmt, // 3.2: |  X  |     |, 14]
[inlinecmt, // 3.3: |  X  |     |, 15]
[inlinecmt, // 3.4: |  X  |     |, 16]
[inlinecmt, // 4.1  |  X  |     |, 17]
[inlinecmt, // 4.2: |     |  X  |, 18]
[inlinecmt, // 4.3: |     |  X  |, 19]
[inlinecmt, // 4.4: |     |  X  |, 20]
[inlinecmt, // 5.1: |  X  |     |, 21]
[inlinecmt, // 5.2: |  X  |    |, 22]
[inlinecmt, // 5.3: |     |  X  |, 23]
[inlinecmt, //      -------------, 24]
[func, func, 25][id, printArray, 25] [openpar, (, 25] [id, res, 25] [colon, :, 25] [integer, integer, 25] [closepar, ), 25] [arrow, ->, 25] [void, void, 25] [inlinecmt, // 2.1, 2.2, 25] 
[opencubr, {, 26]
[write, write, 27][openpar, (, 27] [id, res, 27] [closepar, ), 27] [semi, ;, 27] 
[closecubr, }, 28]
[inlinecmt, // main funtion to test above, 30]
[func, func, 31][id, main, 31] [openpar, (, 31] [closepar, ), 31] [arrow, ->, 31] [void, void, 31] 
[opencubr, {, 32]
[let, let, 33][id, a, 33] [colon, :, 33] [integer, integer, 33] [semi, ;, 33] [inlinecmt, // 1.1, 33] 
[let, let, 34][id, b, 34] [colon, :, 34] [integer, integer, 34] [semi, ;, 34] 
[let, let, 35][id, c, 35] [colon, :, 35] [integer, integer, 35] [semi, ;, 35] 
[let, let, 36][id, res, 36] [colon, :, 36] [integer, integer, 36] [semi, ;, 36] 
[id, a, 37][assign, =, 37] [intnum, 4, 37] [semi, ;, 37] [inlinecmt, // 3.1, 37] 
[id, b, 38][assign, =, 38] [intnum, 6, 38] [semi, ;, 38] [inlinecmt, // 3.1, 38] 
[id, res, 39][assign, =, 39] [id, a, 39] [plus, +, 39] [id, b, 39] [semi, ;, 39] [inlinecmt, // 3.1, 39] 
[id, printArray, 40][openpar, (, 40] [id, res, 40] [closepar, ), 40] [semi, ;, 40] [inlinecmt, // 2.1, 2.2, 40] 
[let, let, 42][id, float_arr, 42] [colon, :, 42] [float, float, 42] [opensqbr, [, 42] [intnum, 4, 42] [closesqbr, ], 42] [semi, ;, 42] 
[id, float_arr, 43][opensqbr, [, 43] [intnum, 0, 43] [closesqbr, ], 43] [assign, =, 43] [floatnum, 10.0, 43] [semi, ;, 43] 
[id, float_arr, 44][opensqbr, [, 44] [intnum, 1, 44] [closesqbr, ], 44] [assign, =, 44] [floatnum, 11.0, 44] [semi, ;, 44] 
[id, float_arr, 45][opensqbr, [, 45] [intnum, 2, 45] [closesqbr, ], 45] [assign, =, 45] [floatnum, 12.0, 45] [semi, ;, 45] 
[let, let, 47][id, arr, 47] [colon, :, 47] [integer, integer, 47] [opensqbr, [, 47] [intnum, 4, 47] [closesqbr, ], 47] [semi, ;, 47] 
[let, let, 48][id, i, 48] [colon, :, 48] [integer, integer, 48] [semi, ;, 48] 
[id, i, 49][assign, =, 49] [intnum, 0, 49] [semi, ;, 49] 
[id, arr, 50][opensqbr, [, 50] [id, i, 50] [plus, +, 50] [intnum, 1, 50] [closesqbr, ], 50] [assign, =, 50] [intnum, 3, 50] [semi, ;, 50] [inlinecmt, // 5.2, 50] 
[id, arr, 51][opensqbr, [, 51] [id, i, 51] [plus, +, 51] [intnum, 2, 51] [closesqbr, ], 51] [assign, =, 51] [intnum, 4, 51] [semi, ;, 51] [inlinecmt, //4.1, 51] 
[id, arr, 52][opensqbr, [, 52] [id, i, 52] [plus, +, 52] [intnum, 3, 52] [closesqbr, ], 52] [assign, =, 52] [intnum, 5, 52] [semi, ;, 52] 
[while, while, 53][openpar, (, 53] [id, i, 53] [lt, <, 53] [intnum, 4, 53] [closepar, ), 53] [opencubr, {, 53] [inlinecmt, // 3.3, 5.1, 53] 
[write, write, 54][openpar, (, 54] [id, arr, 54] [opensqbr, [, 54] [id, i, 54] [closesqbr, ], 54] [closepar, ), 54] [semi, ;, 54] [inlinecmt, // 3.4, 54] 
[id, i, 55][assign, =, 55] [id, i, 55] [plus, +, 55] [intnum, 1, 55] [semi, ;, 55] [inlinecmt, // 3.1, 55] 
[closecubr, }, 56][semi, ;, 56] 
[let, let, 58][id, result, 58] [colon, :, 58] [integer, integer, 58] [semi, ;, 58] 
[id, result, 59][assign, =, 59] [intnum, 2, 59] [semi, ;, 59] 
[id, c, 60][assign, =, 60] [intnum, 1, 60] [semi, ;, 60] 
[if, if, 61][openpar, (, 61] [openpar, (, 61] [id, a, 61] [closepar, ), 61] [mult, *, 61] [openpar, (, 61] [id, b, 61] [closepar, ), 61] [minus, -, 61] [openpar, (, 61] [id, a, 61] [closepar, ), 61] [plus, +, 61] [openpar, (, 61] [not, !, 61] [id, c, 61] [closepar, ), 61] [lt, <, 61] [intnum, 5, 61] [closepar, ), 61] 
[then, then, 62][opencubr, {, 62] 
[write, write, 63][openpar, (, 63] [id, a, 63] [mult, *, 63] [id, b, 63] [plus, +, 63] [intnum, 10, 63] [closepar, ), 63] [semi, ;, 63] 
[closecubr, }, 64]
[else, else, 65][opencubr, {, 65] 
[write, write, 66][openpar, (, 66] [id, a, 66] [mult, *, 66] [id, b, 66] [minus, -, 66] [openpar, (, 66] [id, a, 66] [closepar, ), 66] [plus, +, 66] [openpar, (, 66] [not, !, 66] [id, c, 66] [closepar, ), 66] [closepar, ), 66] [semi, ;, 66] 
[closecubr, }, 67][semi, ;, 67] 
[closecubr, }, 69]
